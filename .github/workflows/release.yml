name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release-server:
    name: Release Server for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: macos
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.4'
          channel: 'stable'
      - uses: bluefireteam/melos-action@v3
      - name: Build
        id: build
        shell: bash
        run: |
          ARTIFACT_PATH=$(./build.sh -v ${{ github.ref_name }} | tail -1)
          ARTIFACT_NAME=$(basename "$ARTIFACT_PATH")
          echo "artifact-path=$(echo $ARTIFACT_PATH)" >> $GITHUB_OUTPUT
          echo "artifact-name=$(echo $ARTIFACT_NAME)" >> $GITHUB_OUTPUT
        working-directory: wrestling_scoreboard_server
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ github.token }}
          file: wrestling_scoreboard_server/${{ steps.build.outputs.artifact-path }}
          asset_name: ${{ steps.build.outputs.artifact-name }}
          tag: ${{ github.ref }}
    
  release-client:
    name: Release Client as ${{ matrix.build-type }} (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: wrestling_scoreboard_client
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: Android
            build-type: apk
          - os: windows-latest
            platform: Windows
            build-type: windows
          - os: ubuntu-latest
            platform: Linux
            build-type: debian
          - os: ubuntu-latest
            platform: Web
            build-type: web
          - os: macos-14
            platform: macOS
            build-type: macos
#          - os: macos-14
#            platform: iOS
#            build-type: ipa
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.4'
          channel: 'stable'
      - uses: actions/setup-java@v3
        if: ${{ matrix.platform == 'Android' }}
        with:
          # AGP8 needs JDK 17
          distribution: 'temurin'
          java-version: '17'
      - uses: bluefireteam/melos-action@v3
      - name: Install Linux Dependencies
        if: ${{ matrix.platform == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libunwind-dev
          sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
      - name: Build
        uses: oberhauser-dev/flutter-release-action@dev
        with:
          working-directory: wrestling_scoreboard_client
          app-name: 'wrestling_scoreboard_client'
          app-version: ${{ github.ref_name }}
          tag: ${{ github.ref }}
          build-type: ${{ matrix.build-type }}
          token: ${{ github.token }}
          build-args: |-
            --dart-define=APP_ENVIRONMENT=production
            --dart-define=API_URL=https://server.wrestling-scoreboard.oberhauser.dev/api
            --dart-define=WEB_SOCKET_URL=wss://server.wrestling-scoreboard.oberhauser.dev/ws
            --dart-define=USE_PATH_URL_STRATEGY=true
          android-keystore-file-base64: ${{ secrets.ANDROID_KEYSTORE }}
          android-keystore-password: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          android-key-alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          android-key-password: ${{ secrets.ANDROID_KEY_PASSWORD }}

  publish-client:
    needs: release-client
    name: Publish Client on ${{ matrix.publish-distributor }} (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: wrestling_scoreboard_client

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: Android
            publish-distributor: android-google-play

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.4'
          channel: 'stable'
      - uses: actions/setup-java@v3
        if: ${{ matrix.platform == 'Android' }}
        with:
          # AGP8 needs JDK 17
          distribution: 'temurin'
          java-version: '17'
      - uses: bluefireteam/melos-action@v3
      - name: Install Linux Dependencies
        if: ${{ matrix.platform == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libunwind-dev
          sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
      - name: Publish
        uses: oberhauser-dev/flutter-release-action@dev
        with:
          working-directory: wrestling_scoreboard_client
          app-name: 'wrestling_scoreboard_client'
          app-version: ${{ github.ref_name }}
          tag: ${{ github.ref }}
          build-type: ${{ matrix.build-type }}
          token: ${{ github.token }}
          build-args: |-
            --dart-define=APP_ENVIRONMENT=production
            --dart-define=API_URL=https://server.wrestling-scoreboard.oberhauser.dev/api
            --dart-define=WEB_SOCKET_URL=wss://server.wrestling-scoreboard.oberhauser.dev/ws
            --dart-define=USE_PATH_URL_STRATEGY=true
          publish-dry-run: true
          publish-stage: internal
          publish-distributor: ${{ matrix.publish-distributor }}
          publish-android-fastlane-secrets-json-base64: ${{ secrets.ANDROID_GOOGLE_PLAY_JSON }}
          android-keystore-file-base64: ${{ secrets.ANDROID_KEYSTORE }}
          android-keystore-password: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          android-key-alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          android-key-password: ${{ secrets.ANDROID_KEY_PASSWORD }}
