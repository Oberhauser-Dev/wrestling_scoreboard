name: test
on:
  workflow_dispatch:
    inputs:
      flutter_version:
        description: 'Flutter Version'
        required: false
        default: 'any'
        type: choice
        options:
          - 'any'
          - '3.27.x'
          - '3.24.x'
      flutter_channel:
        description: 'Flutter Channel'
        required: false
        default: 'stable'
        type: choice
        options:
          - 'stable'
          - 'beta'
          - 'dev'
          - 'master'
      fatal_warnings:
        description: 'Treat warnings as fatal'
        required: false
        default: true
        type: boolean

  workflow_call:
    inputs:
      flutter_version:
        required: false
        default: '3.29.0'
        type: string
      flutter_channel:
        required: false
        default: 'stable'
        type: string
      fatal_warnings:
        required: false
        default: true
        type: boolean

jobs:
  test:
    runs-on: ubuntu-24.04
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ inputs.flutter_version }}
          channel: ${{ inputs.flutter_channel }}
      - uses: bluefireteam/melos-action@v3
      - run: melos run format-check
      - run: melos run analyze -- ${{ inputs.fatal_warnings && '--fatal-infos' || '--no-fatal-warnings --no-fatal-infos' }}
      - name: Prepare server
        working-directory: wrestling_scoreboard_server
        run: |
          cp .env.example .env
          source .env
          sudo systemctl start postgresql.service
          sudo -u postgres psql postgres -c "CREATE USER ${DATABASE_USER} WITH PASSWORD '${DATABASE_PASSWORD}';"
          sudo -u postgres psql postgres -c "CREATE DATABASE ${DATABASE_NAME} WITH OWNER = ${DATABASE_USER};"
          sudo -u postgres psql ${DATABASE_NAME} -c "ALTER SCHEMA public OWNER TO ${DATABASE_USER};"
      - run: melos run test
