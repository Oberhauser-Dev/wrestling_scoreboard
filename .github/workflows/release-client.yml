name: release client

on:
  push:
    tags:
      - 'wrestling_scoreboard_client-*'
  workflow_dispatch:

jobs:
  pre-run:
    name: Calculate release version
    runs-on: ubuntu-latest
    steps:
      - id: release-version
        run: |
          TAG="${{ github.ref_name }}"
          RELEASE_VERSION="${TAG#*wrestling_scoreboard_client-}"
          echo "version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
    outputs:
      release-version: ${{ steps.release-version.outputs.version }}

  release-client:
    name: Release Client as ${{ matrix.build-type }} (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    needs: pre-run
    defaults:
      run:
        working-directory: wrestling_scoreboard_client
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: android
            build-type: apk
          - os: windows-latest
            platform: windows
            build-type: windows
          - os: ubuntu-latest
            platform: linux
            build-type: debian
          - os: ubuntu-latest
            platform: web
            build-type: web
          - os: macos-14
            platform: macos
            build-type: macos
    #          - os: macos-14
    #            platform: ios
    #            build-type: ipa
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.6'
          channel: 'stable'
      - uses: bluefireteam/melos-action@v3
      - uses: actions/setup-java@v4
        if: matrix.platform == 'android'
        with:
          # AGP8 needs JDK 17
          distribution: 'temurin'
          java-version: '17'
      - name: Install Linux Dependencies
        # Install libunwind-dev, see https://github.com/actions/runner-images/issues/6399#issuecomment-1285011525
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libunwind-dev
          sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
      - name: Build
        uses: oberhauser-dev/flutter-release-action@v0
        with:
          working-directory: wrestling_scoreboard_client
          dry-run: false
          app-name: 'wrestling_scoreboard_client'
          app-version: ${{ needs.pre-run.outputs.release-version }}
          tag: ${{ github.ref }}
          build-type: ${{ matrix.build-type }}
          token: ${{ github.token }}
          build-args: |-
            ${{ matrix.platform == 'web' && '--wasm' || '' }}
            --dart-define=APP_ENVIRONMENT=production
            --dart-define=API_URL=https://server.wrestling-scoreboard.oberhauser.dev/api
            --dart-define=WEB_SOCKET_URL=wss://server.wrestling-scoreboard.oberhauser.dev/ws
            --dart-define=WEB_CLIENT_URL=https://wrestling-scoreboard.oberhauser.dev
            --dart-define=USE_PATH_URL_STRATEGY=true
          android-keystore-file-base64: ${{ secrets.ANDROID_KEYSTORE }}
          android-keystore-password: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          android-key-alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          android-key-password: ${{ secrets.ANDROID_KEY_PASSWORD }}

  publish-client:
    needs: [ release-client, pre-run ]
    name: Publish Client on ${{ matrix.publish-distributor }} (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: wrestling_scoreboard_client

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: android
            publish-distributor: android-google-play
          - os: ubuntu-latest
            platform: web
            publish-distributor: web-server
          - os: macos-14
            platform: ios
            publish-distributor: ios-app-store

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.6'
          channel: 'stable'
      - uses: actions/setup-java@v4
        if: matrix.platform == 'android'
        with:
          # AGP8 needs JDK 17
          distribution: 'temurin'
          java-version: '17'
      - uses: bluefireteam/melos-action@v3
      - name: Install Linux Dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libunwind-dev
          sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
      - name: Publish
        uses: oberhauser-dev/flutter-release-action@v0
        with:
          working-directory: wrestling_scoreboard_client
          dry-run: false
          app-name: 'wrestling_scoreboard_client'
          app-version: ${{ needs.pre-run.outputs.release-version }}
          tag: ${{ github.ref }}
          token: ${{ github.token }}
          build-args: |-
            ${{ matrix.platform == 'web' && '--wasm' || '' }}
            --dart-define=APP_ENVIRONMENT=production
            --dart-define=API_URL=https://server.wrestling-scoreboard.oberhauser.dev/api
            --dart-define=WEB_SOCKET_URL=wss://server.wrestling-scoreboard.oberhauser.dev/ws
            --dart-define=WEB_CLIENT_URL=https://wrestling-scoreboard.oberhauser.dev
            --dart-define=USE_PATH_URL_STRATEGY=true
          publish-stage: internal
          publish-distributor: ${{ matrix.publish-distributor }}
          # Android
          publish-android-fastlane-secrets-json-base64: ${{ secrets.ANDROID_GOOGLE_PLAY_JSON }}
          android-keystore-file-base64: ${{ secrets.ANDROID_KEYSTORE }}
          android-keystore-password: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          android-key-alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          android-key-password: ${{ secrets.ANDROID_KEY_PASSWORD }}
          # iOS
          ios-apple-username: ${{ secrets.IOS_APPLE_USERNAME }}
          ios-api-key-id: ${{ secrets.IOS_API_KEY_ID }}
          ios-api-issuer-id: ${{ secrets.IOS_API_ISSUER_ID }}
          ios-api-private-key-base64: ${{ secrets.IOS_API_PRIVATE_KEY }}
          ios-content-provider-id: ${{ secrets.IOS_CONTENT_PROVIDER_ID }}
          ios-team-id: ${{ secrets.IOS_TEAM_ID }}
          ios-distribution-private-key-base64: ${{ secrets.IOS_DISTRIBUTION_PRIVATE_KEY }}
          ios-distribution-cert-base64: ${{ secrets.IOS_DISTRIBUTION_CERT }}
          # Web
          publish-web-host: ${{ secrets.WEB_HOST }}
          publish-web-path: ${{ secrets.WEB_PATH }}
          publish-web-ssh-port: ${{ secrets.WEB_SSH_PORT }}
          publish-web-ssh-user: ${{ secrets.WEB_SSH_USER }}
          publish-web-ssh-private-key-base64: ${{ secrets.WEB_SSH_PRIVATE_KEY }}
